node {
try {
    //github
    def mavenversion = tool name:'maven 3.8.5'
    echo " The Job is: ${env.JOB_NAME}"
    echo " The Build number is: ${env.BUILD_NUMBER}"
    echo " The Node Name is: ${env.NODE_NAME}"
    
    properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
    
    stage('Codecheckout'){
    notifyBuild("STARTED")
    git branch: 'development', credentialsId: '44f1d70e-fd72-4ea8-a67c-38dc99018a99', url: 'https://github.com/Bankapps/maven-web-application.git'   
    }
    //maven
    stage('Build'){
    sh "${mavenversion}/bin/mvn clean package"
    }
    //sonarqube
    stage('Codecovaerage'){
    sh "${mavenversion}/bin/mvn sonar:sonar"
    }
    
    //nexus repository
    stage('Artifacts'){
    sh "${mavenversion}/bin/mvn deploy"
        
    }
    stage('Deploy'){
        sshagent(['67afbdf5-12e0-4c0e-9678-620865db8899']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.35.225:/opt/apache-tomcat-9.0.73/webapps/"
}
    }
}//try closing
catch (e) {
    // If there was an exception thrown, the build failed
    currentBuild.result = "FAILED"
    throw e
  } finally {
    // Success or failure, always send notifications
    notifyBuild(currentBuild.result)
  }
}
def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
